# .github/workflows/android-debug.yml
name: Build Android Debug APK

on:
  push:
    branches:
      - dev   # Ajusta a la rama que uses (por ejemplo, develop)

jobs:
  build-debug:
    runs-on: ubuntu-latest

    steps:
      # 1) Clonar el repositorio
      - name: Checkout repository
        uses: actions/checkout@v4

      # 2) Instalar Node.js 18.x
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'

      # 3) Instalar dependencias JavaScript
      - name: Install dependencies
        run: npm ci

      # 4) Generar carpetas nativas (en caso de Expo Managed Workflow)
      - name: Prebuild Expo (Managed â†’ Bare)
        run: npx expo prebuild --platform android --no-install

      # 5) Compilar el APK Debug con Gradle
      - name: Build Debug APK
        working-directory: android
        run: |
          chmod +x gradlew
          ./gradlew assembleDebug

      # 6) Copiar el APK fuera de android/ para que no dependa de .gitignore
      - name: Copy Debug APK to root
        run: |
          cp android/app/build/outputs/apk/debug/app-debug.apk ./app-debug.apk

      # 7) Subir el APK Debug copiado como artefacto
      - name: Upload Debug APK
        uses: actions/upload-artifact@v2
        with:
          name: app-debug.apk
          path: app-debug.apk
