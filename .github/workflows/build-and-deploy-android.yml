name: Build APK on push to master

on:
  push:
    branches:
      - master

jobs:
  build-android:
    runs-on: ubuntu-latest

    steps:
      # 1) Clona el repositorio
      - name: Checkout repository
        uses: actions/checkout@v4

      # 2) Configura Node.js (LTS recomendada para EAS/Expo)
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      # 3) Instala dependencias (incluye expo y supabase)
      - name: Install dependencies
        run: npm ci

      # 4) Instala EAS CLI globalmente
      - name: Install EAS CLI
        run: npm install --global eas-cli

      # 5) Ejecuta el build con EAS (detecta EXPO_TOKEN automáticamente)
      - name: Build Android APK with EAS
        env:
          EXPO_TOKEN: ${{ secrets.EXPO_TOKEN }}
        run: |
          npx eas build --platform android --profile production --non-interactive

      # 6) Descarga el APK generado
      - name: Download the Android APK artifact
        run: |
          # Obtén el ID del último build finalizado para Android
          BUILD_ID=$(npx eas build:list \
            --status finished \
            --platform android \
            --limit 1 \
            --json \
            | jq -r '.[0].id')
          echo "Último build ID: $BUILD_ID"
          # Descarga el APK a 'app.apk'
          npx eas build:download --platform android --id "$BUILD_ID" --output ./app.apk

      # 7) Sube el APK como artefacto (usando v2 en lugar de v3)
      - name: Upload APK artifact
        uses: actions/upload-artifact@v2
        with:
          name: cazaFotos-android-apk
          path: app.apk
